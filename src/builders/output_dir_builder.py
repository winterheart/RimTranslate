from lxml import etree
import os
import polib

from config.config import version
from ..logger import Logger
from ..parser import Parser


class OutputDirBuilder():
    def build_output_dir(self):
        Logger.logger.info('Beginning to generate DefInjected files')
        fuzzy = 0
        total = 0
        translated = 0
        untranslated = 0

        for root, dirs, files in os.walk(Parser.args.po_dir):
            for file in files:
                if file.endswith('.po'):
                    full_filename = os.path.join(root, file)
                    Logger.logger.info("Processing " + full_filename)
                    xml_filename = full_filename.split(Parser.args.po_dir, 1)[1]
                    xml_filename = xml_filename.strip('.po')
                    xml_filename = os.path.join(Parser.args.output_dir, xml_filename)
                    directory = os.path.dirname(xml_filename)

                    po = polib.pofile(full_filename)
                    translated_po_entries = len(po.translated_entries())
                    fuzzy_po_entries = len(po.fuzzy_entries())
                    untranslated_po_entries = len(po.untranslated_entries())

                    translated = translated + translated_po_entries
                    fuzzy = fuzzy + fuzzy_po_entries
                    untranslated = untranslated + untranslated_po_entries

                    # Do we have translated entries?
                    if translated_po_entries > 0:
                        if not (os.path.exists(directory)):
                            Logger.logger.info("Creating directory " + directory)
                            os.makedirs(directory)
                        xml_content = self.__create_languagedata_xml_file(full_filename)
                        target = open(xml_filename, "w", encoding="utf8")
                        target.write(xml_content)
                        target.close()
                    total_po_entries = len([e for e in po if  not e.obsolete])
                    total = total + total_po_entries

        print("Statistics (untranslated/fuzzy/translated/total): %d/%d/%d/%d" % (untranslated, fuzzy, translated, total))


    def __create_languagedata_xml_file(self, po_file):
        languagedata = etree.Element('LanguageData')
        languagedata.addprevious(etree.Comment(' This file autogenerated with RimTranslate.py v%s ' % version))
        languagedata.addprevious(etree.Comment(' https://github.com/winterheart/RimTranslate/ '))
        languagedata.addprevious(etree.Comment(' Don\'t edit this file manually, edit PO file and regenerate this file! '))
        xml = etree.ElementTree(languagedata)
        po = polib.pofile(po_file)
        for po_entry in po:
            if (po_entry.msgstr != "") and ('fuzzy' not in po_entry.flags):
                entry = etree.SubElement(languagedata, po_entry.msgctxt)
                entry.text = str(po_entry.msgstr)
        # Hack - silly lxml cannot write native unicode strings
        xml_file = etree.tostring(xml, pretty_print=True, xml_declaration=True, encoding='utf-8').decode('utf-8')
        return xml_file
